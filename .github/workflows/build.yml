name: Upload Build and Wiki Content

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    name: Upload Build and Wiki Content
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
        
      - name: Executify Gradle
        run: chmod +x ./gradlew
                
      - name: Decrease JVM Memory Usage
        run: sed '2 s/.*/org.gradle.jvmargs=-Xms1G -Xmx3G/' gradle.properties > gradle.properties.ci
                
      - name: Commit Gradle Property Changes
        run: cp gradle.properties.ci gradle.properties
                
      - name: Decrease Kotlin Memory Usage
        run: sed '3 s/.*/kotlin.daemon.jvm.options=-Xms1G -Xmx2G/' gradle.properties > gradle.properties.ci
                
      - name: Commit Gradle Property Changes
        run: cp gradle.properties.ci gradle.properties
        
      - name: Setup Gradle
        id: setup
        uses: gradle/actions/setup-gradle@v3

      - name: Build Jars
        id: build
        run: ./gradlew build
        if: steps.setup.outcome == 'success'
                
      - name: Rename Source Jar
        run: mv hybrid/build/libs/*-sources.jar build/libs/sources.jar
        if: steps.build.outcome == 'success'
                
      - name: Rename Forge Jar
        run: rm forge/build/libs/*-{sources,shadow}.jar && mv forge/build/libs/*.jar build/libs/forge.jar
        if: steps.build.outcome == 'success'

      - name: Rename Fabric Jar
        run: rm fabric/build/libs/*-{sources,shadow}.jar && mv fabric/build/libs/*.jar build/libs/fabric.jar
        if: steps.build.outcome == 'success'

      - name: Rename Quilt Jar
        run: rm quilt/build/libs/*-{sources,shadow}.jar && mv quilt/build/libs/*.jar build/libs/quilt.jar
        if: steps.build.outcome == 'success'
        
      - name: Deploy Built Jars
        uses: fjogeleit/http-request-action@v1
        if: steps.build.outcome == 'success'
        with:
          url: ${{ secrets.BUILD_UPLOAD_ENDPOINT }}
          method: 'POST'
          data: '{"key": "${{ secrets.BUILD_UPLOAD_KEY }}", "repository": "${{ github.repository }}", "run_id": "${{ github.run_id }}", "run_number": "${{ github.run_number }}", "ref": "${{ github.ref }}", "ref_name": "${{ github.ref_name }}", "sha": "${{ github.sha }}"}'
          files: '{"forge": "${{ github.workspace }}/build/libs/forge.jar", "fabric": "${{ github.workspace }}/build/libs/fabric.jar", "quilt": "${{ github.workspace }}/build/libs/quilt.jar", "source": "${{ github.workspace }}/build/libs/sources.jar", "gradle": "${{ github.workspace }}/gradle.properties"}'

      - name: Generate Data and Submit Content
        id: data
        env:
          NET_JIDB_TO_BASE_DATA_CI: true
          NET_JIDB_TO_BASE_DATA_API: ${{ secrets.WIKI_UPLOAD_ENDPOINT }}
          NET_JIDB_TO_BASE_DATA_TOKEN: ${{ secrets.WIKI_UPLOAD_KEY }}
          NET_JIDB_TO_BASE_DATA_SAFE: ${{ github.workspace }}/common/src/main/resources
        run: ./gradlew fabric:runDatagen
        if: steps.setup.outcome == 'success'
